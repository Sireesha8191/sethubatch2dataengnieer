#  Find  outputs  (Home  Work)
a = [25 , 10.8 , 'Hyd' , True , 3 + 4j , None , 'Hyd' , 25]  # ref a assigns to the list object
print(a)  # [25 , 10.8 , 'Hyd' , True , 3 + 4j , None , 'Hyd' , 25]
print(*a) # 25
            10.8
            Hyd
            True
            3 + 4j
            None
            Hyd
            25
print(type(a)) # <class list>
print(id(a))  # Address o
print(len(a)) # 8
a[2] = 'Sec' #  Hyd replaced with sec
print(a)   # [25 , 10.8 , 'Sec' , True , 3 + 4j , None , 'Hyd' , 25]
print(a[2 : 5])  # indexes starts from 0 to 4 in steps of 1 i.e. Sec True 3 + 4j None



# append()  and  remove()  methods  (Home  work)
a = [ ]  # ref a assign to empty list
print(a)  # [ ]
a . append(25)  # 25 insert at the end of the list i.e. [25]
a . append(10.8) # 10.8 insert at the end of the list i.e. [25,10.8]
a . append('Hyd')  # Hyd insert at the end of the list i.e. [25,10.8,Hyd]
a . append(True)  # True insert at the end of the list i.e. [25,10.8,Hyd,True]
print(a) #  [25,10.8,Hyd,True]
a . remove('Hyd') # Hyd remove from the list
print(a) # [25,10.8,Sec]
a . remove('25') # 25 remove from the list [10.8,Sec]
print(a) # [10.8,Sec]




#  Find  outputs  (Home  work)
a = [25 , 10.8 , 'Hyd'] # ref a assigns to the list object
print(a)  # [25 , 10.8 , 'Hyd']
print(id(a)) # address of the of list 1000
print(a * 3) # [25 , 10.8 , 'Hyd',25 , 10.8 , 'Hyd',25 , 10.8 , 'Hyd']
print(a * 2) # [25 , 10.8 , 'Hyd',25 , 10.8 , 'Hyd']
print(a * 1)  # [25 , 10.8 , 'Hyd']
print(a * 0) # []
print(a * -1) # []
print(a * 4.0) # Error due to float
a = a * 3  # ref a assign to a*3 object
print(a)  #  [25 , 10.8 , 'Hyd',25 , 10.8 , 'Hyd',25 , 10.8 , 'Hyd']
print(id(a))  # address of the object a 1000
a = [25]  # ref a assign to list object
print(a * a) # Error






# list()  function  demo  program
a = list('Hyd')  # ref a assign to list object
print(a)  # ['Hyd']
print(type(a))  # <class list>
print(len(a))  # 1
b = (10 , 20 , 15 , 18) # ref b assign to object (10 , 20 , 15 , 18)
print(list(b)) # [10 , 20 , 15 , 18]
print(list(range(5))) # converts range into list i.e. [0,1,2,3,4]
print(list(25))  # [25]


'''
list()  function
-----------------
1) What  does  list(sequence)  do ?  --->  Converts  sequence  to  list

2) Is  list(non-sequence)  valid ?  --->   No  becoz  argument  should  be  sequence  only

3) What  does  list(No-args)  do ?  ---> Returns  an  empty  list  i.e.  []

4) Finally  list()  function  does  typecasting
'''



# Find  outputs
a = [ ] # ref a assign to empty list
print(type(a))  # <class list>
print(a) # []
print(len(a)) # 0
b = list() # ref b assign to object
print(b)  # []
print(len(b))  # 0




# Slice  demo  program (Home  work)
#        0     1     2         3      4      5      6        7
list = [25 , 10.8 , 3 + 4j , 'Hyd' , True , None , 10.8 , 'Hyd']
#       -8     -7   -6        -5     -4      -3    -2     -1
print(list[2 : 7]) # [3 + 4j , 'Hyd' , True , None , 10.8]
print(list[ : : ]) # [25 , 10.8 , 3 + 4j , 'Hyd' , True , None , 10.8 , 'Hyd']
print(list[:]) #  list[0 :  8 :  1]  --->  List  from  indexes  0  to  7  in  steps  of  1  i.e.  [25 , 10.8 , 3 + 4j , 'Hyd' , True , None , 10.8 , 'Hyd']
print(list[ : : -1]) # ['Hyd', 10.8,None,True,'Hyd',3+4j,10.8,25]
print(list[ : : 2])  # [25,3+4j,true,10.8]
print(list[1 : : 2])  # [10.8,'Hyd',None,'Hyd']
print(list[ : : -2]) #  list[-1 :  -9 : -2]  --->  List  from  indexes   -1  to  -8  in  steps  of   -2   i.e.  ['Hyd' , None , 'Hyd' , 10.8]
print(list[-2 : : -2])  # [10.8,True,3+4j,25]
print(list[1 : 4])  # [10.8,3+4j,'Hyd']
print(list[-4 : -1]) # [True,None,10.8]
print(list[3 : -3]) # ['Hyd',True]
print(list[2 : -5])  # [3+4j]
print(list[-1:-5])  # []




#  Find  outputs  (Home  work)
#        0    1      2       3      4      5      6       7
list = [25 , 10.8 , 3+4j , 'Hyd' , True , None , 10.8 , 'Hyd'] # ref list assign to list object
x ,  y = list[3 : 5]  # x,y assigns to indexex in 3,5 i.e. 'Hyd' & None
print('x : ' , x)  # x:Hyd
print('y : ' , y) # y:None
for  x  in  list[2:7]: #  x varies in list of 2,3,4,5,6
	print(x)  # 3+4j
                    Hyd
                    True
                    None
                    10.8



 #  Find  outputs  (Home  work)
#     0    1   2    3     4
a = [10 , 20 , 30 , 40 , 50] # ref a assign to list object
print(a , id(a))  # [10 , 20 , 30 , 40 , 50] addressof the object 1000
a[1 : 4] = [60 , 70]  # right side object assign to the ref a[1;4]
print(a , id(a))  # 
a[2: 4] = [100 , 200 ,  300] #
print(a , id(a)) #




#  Find  outputs  (Home  work)
a =  [25]  # ref a assign to list object
print(a[1])  # []
print(a[1:]) # [25]



# Find  outputs  (Home  work)
a = (25)
b = 25,
c = 25
d = (25,)
print(type(a))
print(type(b))
print(type(c))
print(type(d))
print(a * 4)
print(b * 4)
print(c * 4)
print(d * 4)




 # tuple()  function  demo  program  (Home  work)
a = tuple('Hyd')
print(a)
print(type(a))
print(len(a))
b = [10 , 20 , 15 , 18]
print(tuple(b))
print(tuple(range(5)))
print(tuple(25))



'''
tuple()  function
-------------------
1) What  does  tuple(sequence)  do ?  --->  Converts  sequence  to  tuple

2) Is  tuple(non-sequence)  valid ?  ---> No  becoz  argument  should  be  sequence  only

3) What  does  tuple(No-args)  do ?  ---> Returns  an  empty  tuple
'''




# Find  outputs (Home  work)
a = ()
print(type(a))
print(a)
print(len(a))
b = tuple()
print(b)
print(len(b))




# Tricky program
# Find  outputs (Home  work)
a = (10 , 20 , 30)
print(a)
print(id(a))
a = a * 2
print(a)
print(id(a))



#  set  object  demo  program  (Home  work)
a = {25 , 10.8 , 'Hyd' , True , 3+4j , None , 25 , 'Hyd'}
print(a)
print(type(a))
print(len(a))
print(a[2])
print(a[1 : 4])
a[2] = 'Sec'
print(a * 2)
print(a * a)



# Tricky  program
# Find  outputs (Home  work)
a = {1 , 'Hyd' , False , True , 0.0 , '' , 1.0 ,  0}
print(a)
print(len(a))
print(type(a))




#  set()  function demo  program
a = set('Rama rAo')
print(a)
print(len(a))
print(set([10 , 20 , 15 , 20]))
print(set((25 , 10.8 , 'Hyd' , 10.8)))
print(set(range(10 , 20 , 3)))
print(set(25))
print(set([25 , 10.8 , [] , 'Hyd']))


'''
set()  function
-----------------
1) What  does  set(sequence)  do ?  --->  Converts  sequence  to  set

2) Is  set(non-sequence)  valid ?  ---> No  becoz  argument  should  be  sequence  only

3) What  does  set(No-args)  do ?  ---> Returns  an  empty  set
'''



# Find  outputs  (Home  work)
a =   [ ]
b =   ( )
c =   {}
d =   set()
print(type(a))
print(type(b))
print(type(c))
print(type(d))
print(a)
print(b)
print(c)
print(d)




# Tricky  program
# add()  and  remove()  methods  (Home  work)
a = set()
a . add(25)
a . add(10.8)
a . add('Hyd')
a . add(True)
a . add(None)
a . add('Hyd')
a . add(1)
print(a)
print(len(a))
a . remove(25)
print(a)
a . append(100)
a . add(set())
a . add(())
a . add([])
print(a)
a . add({})



# How  to  print  set  in  two  differnet ways  (Home  work)
a = {25 , True , 'Hyd' , 10.8}
print('set  with  print  function')
print(How  to  print  set)
print('Iterate  thru  set  with  for  loop')
How  to  iterate  thru  set  with  for  loop